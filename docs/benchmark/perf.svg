<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="470.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="453" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="453" > </text>
<g id="frames">
<g >
<title>__close_nocancel (4,236,535 samples, 0.10%)</title><rect x="1101.1" y="389" width="1.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1104.09" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,236,535 samples, 0.10%)</title><rect x="1101.1" y="357" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1104.09" y="367.5" ></text>
</g>
<g >
<title>qslogBenchmark (4,039,306,857 samples, 100.00%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >qslogBenchmark</text>
</g>
<g >
<title>std::locale::operator== (3,177,635 samples, 0.08%)</title><rect x="42.2" y="341" width="0.9" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="45.22" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,045,925 samples, 0.15%)</title><rect x="70.4" y="181" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.36" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,657,529,275 samples, 65.79%)</title><rect x="154.1" y="277" width="776.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="157.13" y="287.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>std::locale::id::_M_id (4,236,641 samples, 0.10%)</title><rect x="1094.9" y="325" width="1.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1097.90" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,045,925 samples, 0.15%)</title><rect x="70.4" y="165" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.36" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,236,535 samples, 0.10%)</title><rect x="1101.1" y="213" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1104.09" y="223.5" ></text>
</g>
<g >
<title>std::ostream::_M_insert&lt;unsigned long&gt; (3,173,530 samples, 0.08%)</title><rect x="1036.4" y="341" width="0.9" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1039.36" y="351.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1,994,181 samples, 0.05%)</title><rect x="43.1" y="357" width="0.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="46.15" y="367.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (1,059,866 samples, 0.03%)</title><rect x="1187.5" y="389" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1190.53" y="399.5" ></text>
</g>
<g >
<title>fmt::v11::formatter&lt;tm, char, void&gt;::do_format&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, fmt::v11::context&gt; (3,177,555 samples, 0.08%)</title><rect x="1152.6" y="389" width="0.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1155.60" y="399.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (8,480,880 samples, 0.21%)</title><rect x="1126.0" y="389" width="2.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1129.00" y="399.5" ></text>
</g>
<g >
<title>operator delete (7,413,432 samples, 0.18%)</title><rect x="1027.4" y="341" width="2.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1030.39" y="351.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned (1,059,200 samples, 0.03%)</title><rect x="1102.3" y="389" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1105.32" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,642,255,298 samples, 40.66%)</title><rect x="450.7" y="197" width="479.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="453.72" y="207.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,236,535 samples, 0.10%)</title><rect x="1101.1" y="325" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1104.09" y="335.5" ></text>
</g>
<g >
<title>[unknown] (111,198,360 samples, 2.75%)</title><rect x="1068.6" y="357" width="32.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1071.60" y="367.5" >[u..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,236,535 samples, 0.10%)</title><rect x="1101.1" y="133" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1104.09" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,925,514,443 samples, 72.43%)</title><rect x="75.8" y="357" width="854.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="78.85" y="367.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,045,925 samples, 0.15%)</title><rect x="70.4" y="229" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.36" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,039,290 samples, 0.03%)</title><rect x="10.0" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>bmFileSink (2,117,555 samples, 0.05%)</title><rect x="958.0" y="341" width="0.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="961.01" y="351.5" ></text>
</g>
<g >
<title>_dl_load_cache_lookup (546,710 samples, 0.01%)</title><rect x="1124.3" y="373" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1127.29" y="383.5" ></text>
</g>
<g >
<title>_int_free (4,236,922 samples, 0.10%)</title><rect x="1124.8" y="389" width="1.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1127.76" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (16,022,979 samples, 0.40%)</title><rect x="10.3" y="389" width="4.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="13.31" y="399.5" ></text>
</g>
<g >
<title>qslog::FileSink::log (16,935,243 samples, 0.42%)</title><rect x="1029.6" y="341" width="4.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1032.55" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (546,710 samples, 0.01%)</title><rect x="1124.3" y="357" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1127.29" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,059,391 samples, 0.03%)</title><rect x="1124.5" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1127.45" y="287.5" ></text>
</g>
<g >
<title>[unknown] (75,180,187 samples, 1.86%)</title><rect x="1019.0" y="357" width="22.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1022.04" y="367.5" >[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,045,925 samples, 0.15%)</title><rect x="70.4" y="133" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.36" y="143.5" ></text>
</g>
<g >
<title>[unknown] (90,004,643 samples, 2.23%)</title><rect x="16.9" y="357" width="26.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="19.86" y="367.5" >[..</text>
</g>
<g >
<title>__GI___libc_write (2,938,231,305 samples, 72.74%)</title><rect x="72.1" y="373" width="858.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="75.13" y="383.5" >__GI___libc_write</text>
</g>
<g >
<title>fmt::v11::detail::tm_writer&lt;fmt::v11::basic_appender&lt;char&gt;, char, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::write2 (2,116,985 samples, 0.05%)</title><rect x="38.2" y="341" width="0.6" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="41.20" y="351.5" ></text>
</g>
<g >
<title>std::ostream::_M_insert&lt;unsigned long&gt; (3,395,264 samples, 0.08%)</title><rect x="1046.6" y="373" width="1.0" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1049.57" y="383.5" ></text>
</g>
<g >
<title>std::ostream::_M_insert&lt;unsigned long&gt; (79,439,693 samples, 1.97%)</title><rect x="1077.0" y="341" width="23.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1079.95" y="351.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,092,630 samples, 0.10%)</title><rect x="1156.3" y="325" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1159.32" y="335.5" ></text>
</g>
<g >
<title>malloc (5,291,463 samples, 0.13%)</title><rect x="942.9" y="373" width="1.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="945.86" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,693,544,594 samples, 66.68%)</title><rect x="143.6" y="293" width="786.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="146.61" y="303.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>std::codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv (2,118,797 samples, 0.05%)</title><rect x="1169.9" y="373" width="0.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1172.89" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,039,290 samples, 0.03%)</title><rect x="10.0" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>operator new (11,645,032 samples, 0.29%)</title><rect x="944.4" y="373" width="3.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="947.40" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,017,319,977 samples, 49.94%)</title><rect x="341.2" y="229" width="589.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="344.16" y="239.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>__tzfile_compute (1,060,667 samples, 0.03%)</title><rect x="1124.0" y="389" width="0.3" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="1126.98" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,236,535 samples, 0.10%)</title><rect x="1101.1" y="181" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1104.09" y="191.5" ></text>
</g>
<g >
<title>read (4,092,630 samples, 0.10%)</title><rect x="1156.3" y="389" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1159.32" y="399.5" ></text>
</g>
<g >
<title>fmt::v11::detail::tm_writer&lt;fmt::v11::basic_appender&lt;char&gt;, char, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::write_year_extended (5,293,097 samples, 0.13%)</title><rect x="1137.4" y="389" width="1.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1140.45" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (2,119,184 samples, 0.05%)</title><rect x="1019.0" y="341" width="0.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1022.04" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,045,925 samples, 0.15%)</title><rect x="70.4" y="149" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.36" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,236,535 samples, 0.10%)</title><rect x="1101.1" y="229" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1104.09" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,059,391 samples, 0.03%)</title><rect x="1124.5" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1127.45" y="335.5" ></text>
</g>
<g >
<title>[unknown] (174,952,715 samples, 4.33%)</title><rect x="16.9" y="373" width="51.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="19.86" y="383.5" >[unkn..</text>
</g>
<g >
<title>qslog::OSUtils::getTid (1,059,970 samples, 0.03%)</title><rect x="957.7" y="373" width="0.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="960.70" y="383.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::xsputn (19,068,295 samples, 0.47%)</title><rect x="960.2" y="373" width="5.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="963.18" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,092,630 samples, 0.10%)</title><rect x="1156.3" y="293" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1159.32" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,725,305,162 samples, 67.47%)</title><rect x="134.3" y="309" width="796.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="137.33" y="319.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,092,630 samples, 0.10%)</title><rect x="1156.3" y="309" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1159.32" y="319.5" ></text>
</g>
<g >
<title>fmt::v11::detail::vformat_to (4,228,083 samples, 0.10%)</title><rect x="1023.7" y="341" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1026.68" y="351.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (112,507,976 samples, 2.79%)</title><rect x="967.6" y="373" width="32.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="970.61" y="383.5" >st..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,039,290 samples, 0.03%)</title><rect x="10.0" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>qslog::FileSink::log (13,762,257 samples, 0.34%)</title><rect x="947.8" y="373" width="4.0" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="950.81" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,039,290 samples, 0.03%)</title><rect x="10.0" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (3,176,316 samples, 0.08%)</title><rect x="1093.4" y="325" width="0.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1096.35" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,039,290 samples, 0.03%)</title><rect x="10.0" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,039,290 samples, 0.03%)</title><rect x="10.0" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>all (4,039,312,064 samples, 100%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>qslog::Logger::log&lt;unsigned long&amp;&gt; (20,122,738 samples, 0.50%)</title><rect x="951.8" y="373" width="5.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="954.83" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,059,391 samples, 0.03%)</title><rect x="1124.5" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1127.45" y="351.5" ></text>
</g>
<g >
<title>[qslogBenchmark] (2,118,352 samples, 0.05%)</title><rect x="1019.7" y="341" width="0.6" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1022.66" y="351.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::sync (12,710,732 samples, 0.31%)</title><rect x="1000.5" y="373" width="3.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1003.47" y="383.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::fd (5,291,731 samples, 0.13%)</title><rect x="958.6" y="373" width="1.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="961.63" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,236,535 samples, 0.10%)</title><rect x="1101.1" y="309" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1104.09" y="319.5" ></text>
</g>
<g >
<title>fmt::v11::detail::value&lt;fmt::v11::context&gt;::format_custom&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, fmt::v11::formatter&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, char, void&gt; &gt; (9,531,724 samples, 0.24%)</title><rect x="56.2" y="357" width="2.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="59.21" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,305,098 samples, 0.11%)</title><rect x="70.9" y="117" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.87" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (546,710 samples, 0.01%)</title><rect x="1124.3" y="229" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1127.29" y="239.5" ></text>
</g>
<g >
<title>__tz_convert (9,536,360 samples, 0.24%)</title><rect x="1121.2" y="389" width="2.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1124.20" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,039,290 samples, 0.03%)</title><rect x="10.0" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (20,138,218 samples, 0.50%)</title><rect x="1164.0" y="373" width="5.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1167.01" y="383.5" ></text>
</g>
<g >
<title>tzset_internal (7,411,713 samples, 0.18%)</title><rect x="1187.8" y="389" width="2.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1190.83" y="399.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::xsputn (2,115,810 samples, 0.05%)</title><rect x="1163.4" y="373" width="0.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1166.39" y="383.5" ></text>
</g>
<g >
<title>virtual thunk to std::basic_ofstream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ofstream (111,198,360 samples, 2.75%)</title><rect x="1068.6" y="373" width="32.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1071.60" y="383.5" >vi..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,764,483,973 samples, 68.44%)</title><rect x="122.9" y="325" width="807.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="125.89" y="335.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>fmt::v11::detail::tm_writer&lt;fmt::v11::basic_appender&lt;char&gt;, char, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::write_year_extended (8,471,518 samples, 0.21%)</title><rect x="38.8" y="341" width="2.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="41.82" y="351.5" ></text>
</g>
<g >
<title>[[vdso]] (7,408,475 samples, 0.18%)</title><rect x="1128.5" y="373" width="2.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1131.48" y="383.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (44,492,231 samples, 1.10%)</title><rect x="1055.6" y="373" width="13.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1058.60" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,059,391 samples, 0.03%)</title><rect x="1124.5" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1127.45" y="319.5" ></text>
</g>
<g >
<title>fmt::v11::formatter&lt;tm, char, void&gt;::do_format&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, fmt::v11::context&gt; (9,521,420 samples, 0.24%)</title><rect x="62.1" y="357" width="2.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="65.09" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,236,535 samples, 0.10%)</title><rect x="1101.1" y="373" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1104.09" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,910,792 samples, 0.20%)</title><rect x="69.8" y="325" width="2.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.82" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,910,792 samples, 0.20%)</title><rect x="69.8" y="277" width="2.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.82" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,236,535 samples, 0.10%)</title><rect x="1101.1" y="293" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1104.09" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,092,630 samples, 0.10%)</title><rect x="1156.3" y="213" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1159.32" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (47,771,530 samples, 1.18%)</title><rect x="916.5" y="53" width="14.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="919.52" y="63.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,682,324 samples, 0.07%)</title><rect x="71.3" y="101" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="74.35" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (546,710 samples, 0.01%)</title><rect x="1124.3" y="277" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1127.29" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,878,472 samples, 0.39%)</title><rect x="925.8" y="37" width="4.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="928.83" y="47.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (128,291,783 samples, 3.18%)</title><rect x="893.0" y="85" width="37.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="896.00" y="95.5" >[[k..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,236,535 samples, 0.10%)</title><rect x="1101.1" y="245" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1104.09" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,092,630 samples, 0.10%)</title><rect x="1156.3" y="261" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1159.32" y="271.5" ></text>
</g>
<g >
<title>fmt::v11::detail::value&lt;fmt::v11::context&gt;::format_custom&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, fmt::v11::formatter&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, char, void&gt; &gt; (46,582,864 samples, 1.15%)</title><rect x="1139.0" y="389" width="13.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1142.00" y="399.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (50,837,467 samples, 1.26%)</title><rect x="1004.2" y="373" width="14.8" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1007.19" y="383.5" ></text>
</g>
<g >
<title>fmt::v11::vformat[abi:cxx11] (3,178,292 samples, 0.08%)</title><rect x="941.9" y="373" width="1.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="944.93" y="383.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (11,649,551 samples, 0.29%)</title><rect x="1020.3" y="341" width="3.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1023.28" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (546,710 samples, 0.01%)</title><rect x="1124.3" y="245" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1127.29" y="255.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (32,837,941 samples, 0.81%)</title><rect x="1083.8" y="325" width="9.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1086.76" y="335.5" ></text>
</g>
<g >
<title>fmt::v11::detail::tm_writer&lt;fmt::v11::basic_appender&lt;char&gt;, char, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::write2 (27,898,871 samples, 0.69%)</title><rect x="48.1" y="357" width="8.1" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="51.06" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (546,710 samples, 0.01%)</title><rect x="1124.3" y="293" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1127.29" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,236,535 samples, 0.10%)</title><rect x="1101.1" y="165" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1104.09" y="175.5" ></text>
</g>
<g >
<title>fmt::v11::formatter&lt;tm, char, void&gt;::do_format&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, fmt::v11::context&gt; (3,176,454 samples, 0.08%)</title><rect x="41.3" y="341" width="0.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="44.29" y="351.5" ></text>
</g>
<g >
<title>std::ostream::put (15,880,774 samples, 0.39%)</title><rect x="1182.9" y="389" width="4.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1185.89" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,236,535 samples, 0.10%)</title><rect x="1101.1" y="197" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1104.09" y="207.5" ></text>
</g>
<g >
<title>fmt::v11::detail::parse_chrono_format&lt;char, fmt::v11::detail::tm_writer&lt;fmt::v11::basic_appender&lt;char&gt;, char, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;&amp;&gt; (73,062,051 samples, 1.81%)</title><rect x="16.9" y="341" width="21.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="19.86" y="351.5" >f..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (258,954,018 samples, 6.41%)</title><rect x="854.8" y="117" width="75.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="857.83" y="127.5" >[[kernel..</text>
</g>
<g >
<title>fmt::v11::vformat[abi:cxx11] (8,474,651 samples, 0.21%)</title><rect x="1024.9" y="341" width="2.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1027.91" y="351.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (7,409,897 samples, 0.18%)</title><rect x="1170.5" y="389" width="2.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1173.51" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,039,290 samples, 0.03%)</title><rect x="10.0" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>[unknown] (3,716,821,199 samples, 92.02%)</title><rect x="15.3" y="389" width="1085.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.30" y="399.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,059,391 samples, 0.03%)</title><rect x="1124.5" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1127.45" y="383.5" ></text>
</g>
<g >
<title>malloc (9,537,214 samples, 0.24%)</title><rect x="1153.5" y="389" width="2.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1156.53" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (477,630,032 samples, 11.82%)</title><rect x="790.9" y="149" width="139.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="793.94" y="159.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (14,821,445 samples, 0.37%)</title><rect x="1172.7" y="389" width="4.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1175.68" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,910,792 samples, 0.20%)</title><rect x="69.8" y="309" width="2.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.82" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,045,925 samples, 0.15%)</title><rect x="70.4" y="261" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.36" y="271.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (10,586,625 samples, 0.26%)</title><rect x="64.9" y="357" width="3.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="67.87" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_open (7,910,792 samples, 0.20%)</title><rect x="69.8" y="373" width="2.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="72.82" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,201,678,235 samples, 29.75%)</title><rect x="579.4" y="181" width="351.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="582.43" y="191.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (25,407,143 samples, 0.63%)</title><rect x="1068.6" y="341" width="7.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1071.60" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,039,290 samples, 0.03%)</title><rect x="10.0" y="389" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (363,212,575 samples, 8.99%)</title><rect x="824.4" y="133" width="106.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="827.37" y="143.5" >[[kernel.kal..</text>
</g>
<g >
<title>fmt::v11::detail::format_handler&lt;char&gt;::on_format_specs (3,179,018 samples, 0.08%)</title><rect x="936.4" y="373" width="0.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="939.35" y="383.5" ></text>
</g>
<g >
<title>std::codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv (20,120,426 samples, 0.50%)</title><rect x="1177.0" y="389" width="5.9" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1180.01" y="399.5" ></text>
</g>
<g >
<title>fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (4,235,586 samples, 0.10%)</title><rect x="46.8" y="357" width="1.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="49.82" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,059,050 samples, 0.03%)</title><rect x="1102.0" y="85" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1105.01" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,039,290 samples, 0.03%)</title><rect x="10.0" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (6,357,457 samples, 0.16%)</title><rect x="965.7" y="373" width="1.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="968.75" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (546,710 samples, 0.01%)</title><rect x="1124.3" y="341" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1127.29" y="351.5" ></text>
</g>
<g >
<title>qslog::OSUtils::getPid (6,361,404 samples, 0.16%)</title><rect x="1034.5" y="341" width="1.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1037.50" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,236,535 samples, 0.10%)</title><rect x="1101.1" y="117" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1104.09" y="127.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (5,295,321 samples, 0.13%)</title><rect x="1039.5" y="341" width="1.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1042.45" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,059,391 samples, 0.03%)</title><rect x="1124.5" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1127.45" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,059,391 samples, 0.03%)</title><rect x="1124.5" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1127.45" y="303.5" ></text>
</g>
<g >
<title>__tzfile_compute (2,119,707 samples, 0.05%)</title><rect x="930.8" y="373" width="0.6" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="933.78" y="383.5" ></text>
</g>
<g >
<title>std::ostream::flush (3,179,249 samples, 0.08%)</title><rect x="1100.2" y="341" width="0.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1103.16" y="351.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (28,602,756 samples, 0.71%)</title><rect x="1102.6" y="389" width="8.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1105.63" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,039,290 samples, 0.03%)</title><rect x="10.0" y="229" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,092,630 samples, 0.10%)</title><rect x="1156.3" y="229" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1159.32" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (91,203,229 samples, 2.26%)</title><rect x="903.8" y="69" width="26.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="906.83" y="79.5" >[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (546,710 samples, 0.01%)</title><rect x="1124.3" y="325" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1127.29" y="335.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (5,293,025 samples, 0.13%)</title><rect x="15.3" y="373" width="1.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="18.31" y="383.5" ></text>
</g>
<g >
<title>fmt::v11::detail::format_decimal&lt;char, unsigned long, fmt::v11::basic_appender&lt;char&gt;, 0&gt; (15,886,772 samples, 0.39%)</title><rect x="1130.6" y="389" width="4.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1133.64" y="399.5" ></text>
</g>
<g >
<title>__GI___fileno (6,348,718 samples, 0.16%)</title><rect x="68.0" y="373" width="1.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="70.97" y="383.5" ></text>
</g>
<g >
<title>_dl_map_object (546,710 samples, 0.01%)</title><rect x="1124.3" y="389" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1127.29" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1,060,042 samples, 0.03%)</title><rect x="930.5" y="373" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="933.47" y="383.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (2,118,046 samples, 0.05%)</title><rect x="1094.3" y="325" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1097.28" y="335.5" ></text>
</g>
<g >
<title>__offtime (34,949,070 samples, 0.87%)</title><rect x="1111.0" y="389" width="10.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1113.99" y="399.5" ></text>
</g>
<g >
<title>fmt::v11::detail::format_handler&lt;char&gt;::on_format_specs (9,526,091 samples, 0.24%)</title><rect x="44.0" y="357" width="2.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="47.04" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (222,960,361 samples, 5.52%)</title><rect x="865.3" y="101" width="65.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="868.34" y="111.5" >[[kerne..</text>
</g>
<g >
<title>std::ostream::flush (27,541,702 samples, 0.68%)</title><rect x="1047.6" y="373" width="8.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1050.56" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,299,256,016 samples, 56.92%)</title><rect x="258.8" y="245" width="671.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="261.79" y="255.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (546,710 samples, 0.01%)</title><rect x="1124.3" y="261" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1127.29" y="271.5" ></text>
</g>
<g >
<title>[qslogBenchmark] (1,060,016 samples, 0.03%)</title><rect x="15.0" y="389" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="17.99" y="399.5" ></text>
</g>
<g >
<title>fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (15,915,922 samples, 0.39%)</title><rect x="937.3" y="373" width="4.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="940.28" y="383.5" ></text>
</g>
<g >
<title>fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (6,356,436 samples, 0.16%)</title><rect x="934.5" y="373" width="1.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="937.49" y="383.5" ></text>
</g>
<g >
<title>_int_free (10,584,875 samples, 0.26%)</title><rect x="931.4" y="373" width="3.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="934.40" y="383.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (19,059,057 samples, 0.47%)</title><rect x="1041.0" y="373" width="5.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1044.00" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,092,630 samples, 0.10%)</title><rect x="1156.3" y="357" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1159.32" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,236,535 samples, 0.10%)</title><rect x="1101.1" y="341" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1104.09" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,092,630 samples, 0.10%)</title><rect x="1156.3" y="277" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1159.32" y="287.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (13,768,505 samples, 0.34%)</title><rect x="1096.1" y="325" width="4.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1099.14" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (546,710 samples, 0.01%)</title><rect x="1124.3" y="309" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1127.29" y="319.5" ></text>
</g>
<g >
<title>fmt::v11::detail::tm_writer&lt;fmt::v11::basic_appender&lt;char&gt;, char, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::write2 (7,409,228 samples, 0.18%)</title><rect x="1135.3" y="389" width="2.1" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="1138.28" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (775,348,938 samples, 19.20%)</title><rect x="704.0" y="165" width="226.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="706.97" y="175.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>std::basic_ofstream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ofstream (75,180,187 samples, 1.86%)</title><rect x="1019.0" y="373" width="22.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1022.04" y="383.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,045,925 samples, 0.15%)</title><rect x="70.4" y="197" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.36" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,039,290 samples, 0.03%)</title><rect x="10.0" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,828,070,912 samples, 70.01%)</title><rect x="104.3" y="341" width="826.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="107.31" y="351.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,236,535 samples, 0.10%)</title><rect x="1101.1" y="149" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1104.09" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,236,535 samples, 0.10%)</title><rect x="1101.1" y="277" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1104.09" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,045,925 samples, 0.15%)</title><rect x="70.4" y="245" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.36" y="255.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;qslog::FileSink, std::allocator&lt;qslog::FileSink&gt;,  (2,117,555 samples, 0.05%)</title><rect x="958.0" y="373" width="0.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="961.01" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,910,792 samples, 0.20%)</title><rect x="69.8" y="341" width="2.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.82" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,092,630 samples, 0.10%)</title><rect x="1156.3" y="245" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1159.32" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,844,656,262 samples, 45.67%)</title><rect x="391.6" y="213" width="538.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="394.60" y="223.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,236,535 samples, 0.10%)</title><rect x="1101.1" y="261" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1104.09" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,236,535 samples, 0.10%)</title><rect x="1101.1" y="101" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1104.09" y="111.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (2,113,101 samples, 0.05%)</title><rect x="1076.3" y="341" width="0.7" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1079.33" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,092,630 samples, 0.10%)</title><rect x="1156.3" y="373" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1159.32" y="383.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (1,059,174 samples, 0.03%)</title><rect x="1076.0" y="341" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1079.02" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,527,247,936 samples, 62.57%)</title><rect x="192.2" y="261" width="738.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="195.19" y="271.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (43,443,208 samples, 1.08%)</title><rect x="1157.8" y="389" width="12.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1160.82" y="399.5" ></text>
</g>
<g >
<title>[unknown] (2,117,555 samples, 0.05%)</title><rect x="958.0" y="357" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="961.01" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,092,630 samples, 0.10%)</title><rect x="1156.3" y="341" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1159.32" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,092,630 samples, 0.10%)</title><rect x="1156.3" y="197" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1159.32" y="207.5" ></text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (7,408,475 samples, 0.18%)</title><rect x="1128.5" y="389" width="2.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1131.48" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,045,925 samples, 0.15%)</title><rect x="70.4" y="213" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.36" y="223.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (1,059,718 samples, 0.03%)</title><rect x="1157.5" y="389" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1160.51" y="399.5" ></text>
</g>
<g >
<title>_exit (1,059,391 samples, 0.03%)</title><rect x="1124.5" y="389" width="0.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1127.45" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,039,290 samples, 0.03%)</title><rect x="10.0" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>fmt::v11::detail::vformat_to (10,593,835 samples, 0.26%)</title><rect x="59.0" y="357" width="3.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="62.00" y="367.5" ></text>
</g>
<g >
<title>std::ostream::flush (7,411,436 samples, 0.18%)</title><rect x="1037.3" y="341" width="2.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1040.29" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,910,792 samples, 0.20%)</title><rect x="69.8" y="357" width="2.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.82" y="367.5" ></text>
</g>
<g >
<title>fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (1,059,739 samples, 0.03%)</title><rect x="43.7" y="357" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="46.73" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,910,792 samples, 0.20%)</title><rect x="69.8" y="293" width="2.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="72.82" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,039,290 samples, 0.03%)</title><rect x="10.0" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,039,290 samples, 0.03%)</title><rect x="10.0" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,059,050 samples, 0.03%)</title><rect x="1102.0" y="69" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1105.01" y="79.5" ></text>
</g>
</g>
</svg>
